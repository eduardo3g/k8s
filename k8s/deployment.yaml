apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 1
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: "eduardo3g/hello-go:v6.2"

          # vCPU -> 1000 milicores
          resources:
            requests: # the minimum of resources to be reseverd to the pod inside the node
              cpu: "0.05"
              memory: 20Mi
            limits:
              cpu: "0.05"
              memory: 25Mi


          startupProbe:
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 3
            failureThreshold: 10

          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000 # container port, not the service port
            # initialDelaySeconds: 10 // unnecessary when startupProbe is configured
            periodSeconds: 3
            failureThreshold: 1 # if fails once, it means the app is not ready

          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000 # container port, not the service port
            periodSeconds: 5
            failureThreshold: 1 # needs to fail 1 time to restart container
            timeoutSeconds: 1
            successThreshold: 1
            # initialDelaySeconds: 15 // unnecessary when startupProbe is configured

          # env:
          #   - name: NAME
          #     valueFrom:
          #       configMapKeyRef:
          #         name: goserver-env
          #         key: NAME
          #   - name: AGE
          #     valueFrom:
          #       configMapKeyRef:
          #         name: goserver-env
          #         key: AGE

          envFrom:
            - configMapRef:
                name: goserver-env
            - secretRef:
                name: goserver-secret
          
          # Creates a file inside the Pod (/myfamily/family.txt)
          volumeMounts:
            - mountPath: "/go/myfamily"
              name: config
              readOnly: true
            - mountPath: "/go/pvc"
              name: goserver-volume
      
      volumes:
        - name: goserver-volume
          persistentVolumeClaim:
            claimName: goserver-pvc
        - name: config
          configMap:
            name: configmap-family
            items:
            - key: members
              path: "family.txt"